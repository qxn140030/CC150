Write a program to sort a stack such that the smallest items are on the top. You can use an additional temporary stack, but
you may not copy the elements into any other data structure (such as an array). The stack supports the following operations:
push, pop, peek and isEmpty.

Time complexity: O(n^2). Space complexity: O(n).          
void sort(Stack<Integer> s) {
    Stack<Integer> r = new Stack<Integer>();
    while (!s.empty()) {                      // insert each element in s in sorted order into r.
        int tmp = s.pop();
        while (!r.empty() && r.peek() > tmp) {
            s.push(r.pop());
        }
        r.push(tmp);
    }
    while (!r.empty()) {         // copy the elements from r back into s.
        s.push(r.pop());
    }
}
