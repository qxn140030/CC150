Question: How would you design a stack which, in addition to push and pop, has a function min which returns the minimum element?
          Push, pop and min should all operate in O(1) time.
          
public class StackWithMin extends Stack<Integer> {
  Stack<Integer> s;
  public StackWithMin {
    s = new Stack<Integer>();
  }
  public void push(int val) {
    if (val <= min()) {
      s.push(val);
    }
    super.push(val);
  }
  public int pop() {
    int val = super.pop();
    if (val == min()) {
      s.pop();
    }
    return val;
  }
  public int min() {
    if (s.empty()) {
      return Integer.MAX_VALUE;
    }
    return s.peek();
  }
}
